*/--------------------------------------------------------------------------------------
   Append 2 columns
--------------------------------------------------------------------------------------*/

AppendTwoCols
=LAMBDA(range1,range2,
  LET(
          RowsRng1, ROWS(range1),
          RowsTotal, ROWS(range1) + ROWS(range2),
          Seq,SEQUENCE(RowsTotal),
          IF(
              Seq<=RowsRng1, INDEX(range1, Seq),
              INDEX(range2, Seq-RowsRng1)
             )
         )
)


*/--------------------------------------------------------------------------------------
   Stack Array
    - converts an n-column array to a 1 column array by stacking all columns on top
      of each other.
    - can be utilised to append seperate 1 column ranges by passing a paramater
      which includes the choose function for example choose({1,2,3}, rng1, rng2, rng3)
--------------------------------------------------------------------------------------*/

StackArrray
=LAMBDA(ArrayToStack,
     LET(
           ColCount, COLUMNS(ArrayToStack),
           RowCount, ROWS(ArrayToStack),
           CellCount, ColCount * RowCount,
           Seq, SEQUENCE(CellCount),
           RowIndex, MOD(Seq-1,RowCount)+1,
           ColIndex, ROUNDUP(Seq/RowCount, 0),
           ErrorValue, 1/0,
           ReturnValue, INDEX(ArrayToStack, RowIndex, ColIndex),
           ArrayInclErrors, IF(ReturnValue = "", ErrorValue, ReturnValue),
           FILTER(ArrayInclErrors, NOT(ISERROR(ArrayInclErrors)))
        )
)


*/--------------------------------------------------------------------------------------
     Append two ranges
     https://exceljet.net/formula/lambda-append-range
--------------------------------------------------------------------------------------*/

AppendTwoRanges
=LAMBDA(range1,range2,
    LET(
        rows1,ROWS(range1),
        rows2,ROWS(range2),
        cols1,COLUMNS(range1),
        cols2,COLUMNS(range2),
        rowindex,SEQUENCE(rows1+rows2),
        colindex,SEQUENCE(1,MAX(cols1,cols2)),
       IF(
          rowindex<=rows1,
          INDEX(range1,rowindex,colindex),
          INDEX(range2,rowindex-rows1,colindex)
        )
    )
)



*/--------------------------------------------------------------------------------------
     Split text to array
     https://exceljet.net/formula/lambda-split-text-to-array
--------------------------------------------------------------------------------------*/


=LAMBDA(range1,range2,default,
  LET(
  rows1,ROWS(range1),
  rows2,ROWS(range2),
  cols1,COLUMNS(range1),
  cols2,COLUMNS(range2),
  rowindex,SEQUENCE(rows1+rows2),
  colindex,SEQUENCE(1,MAX(cols1,cols2)),
  result,
  IF(
    rowindex<=rows1,
    INDEX(range1,rowindex,colindex),
    INDEX(range2,rowindex-rows1,colindex)
  )
  )
)


*/--------------------------------------------------------------------------------------
     Split text to array
     https://exceljet.net/formula/lambda-split-text-to-array
--------------------------------------------------------------------------------------*/
SplitTextToArray
=LAMBDA(text,delim,
      TRANSPOSE(
           FILTERXML(
                "<x><y>" & SUBSTITUTE(text,delim,"</y><y>") & "</y></x>",
                 "//y"
             )
       )
)


*/--------------------------------------------------------------------------------------
     Month Ends Between Dates
--------------------------------------------------------------------------------------*/

MonthEndsBetweenDates
=LAMBDA(DateStart,DateEnd,
      LET(
           MonthsBetween, (YEAR(DateEnd) * 12 + MONTH(DateEnd))  - (YEAR(DateStart) * 12 + MONTH(DateStart)) + 1,
           Seq, SEQUENCE(MonthsBetween),
           EOMONTH(DateStart, Seq-1)
      )
)


*/--------------------------------------------------------------------------------------
     Cell above range
--------------------------------------------------------------------------------------*/
CellAboveRange
=LAMBDA(cell,
    OFFSET(cell, -1,0,1,1)
 

*/--------------------------------------------------------------------------------------
     Table column
     -  returns entire column from a 2 dimensional array or range with headers
--------------------------------------------------------------------------------------*/
TableColumn
=LAMBDA(TableRange,ColName,
    LET(
        Headers, INDEX(TableRange, 1,),
        HeaderIndex, MATCH(ColName, Headers, 0),
        DataRows, ROWS(TableRange) - 1,
        OFFSET(TableRange, 1,HeaderIndex-1, DataRows, 1)
     )
)



*/--------------------------------------------------------------------------------------
     Return entire row based on lookup
      - Returns first entire row where lookup value is found in LookupCol
--------------------------------------------------------------------------------------*/
EntireRowBasedOnLookup = 
=LAMBDA(LookupValue,LookupCol,
  LET(
       TotalColumnsInSheet, COLUMNS(INDIRECT("1:1")),
       LookupColumnNumber, COLUMN(LookupCol),
       MatchIndex, MATCH(LookupValue, LookupCol, 0),
       ReturnValue, IF(
            COLUMNS(LookupCol) <> 1, "LookupCol can only contain contain one column",
            OFFSET(INDEX(LookupCol, MatchIndex), 0, -(LookupColumnNumber-1),1,TotalColumnsInSheet)
        ),
       ReturnValue
  )
)


*/--------------------------------------------------------------------------------------
     
--------------------------------------------------------------------------------------*/

LastNonEmptyColumnInRow
=LAMBDA(RowToCheck,
   IF(
       ROWS(RowToCheck) <> 1,
       "RowToCheck Needs to be a single row only",
        MAX((RowToCheck<>"") * COLUMN(RowToCheck))
   )
)